version: "3.9"
services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    networks:
      - jaeger-example

  # # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      - "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"
    networks:
      - jaeger-example

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.75.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--feature-gates=service.connectors", "--feature-gates=+processor.servicegraph.virtualNode", "--config=/etc/otelcol-config.yml"]
    volumes:
      - ./otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
      # - ./src/otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - "14268"         # Jaeger endpoint
      - "4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    depends_on:
      - jaeger
    networks:
      - jaeger-example

  # Grafana
  # grafana:
  #   image: grafana/grafana:9.4.7
  #   container_name: grafana
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 100M
  #   volumes:
  #     # - ./grafana/grafana.ini:/etc/grafana/grafana.ini
  #     - ./grafana/provisioning/:/etc/grafana/provisioning/
  #   ports:
  #     - "${GRAFANA_SERVICE_PORT}"

  hotrod:
    image: jaegertracing/example-hotrod:latest
    # To run the latest trunk build, find the tag at Docker Hub and use the line below
    # https://hub.docker.com/r/jaegertracing/example-hotrod-snapshot/tags
    #image: jaegertracing/example-hotrod-snapshot:0ab8f2fcb12ff0d10830c1ee3bb52b745522db6c
    ports:
      - "8080:8080"
    command: ["all"]
    environment:
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://otelcol:14268/api/traces
      # - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    networks:
      - jaeger-example
    depends_on:
      - jaeger

networks:
  jaeger-example:
